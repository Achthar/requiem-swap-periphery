/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BEP20Token, BEP20TokenInterface } from "../BEP20Token";

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "mintingFinished",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "name",
    outputs: [
      {
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_spender",
        type: "address",
      },
      {
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_from",
        type: "address",
      },
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "decimals",
    outputs: [
      {
        name: "",
        type: "uint8",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "unpause",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "paused",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_spender",
        type: "address",
      },
      {
        name: "_subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseApproval",
    outputs: [
      {
        name: "success",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "pause",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "symbol",
    outputs: [
      {
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "mintTotal",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_spender",
        type: "address",
      },
      {
        name: "_addedValue",
        type: "uint256",
      },
    ],
    name: "increaseApproval",
    outputs: [
      {
        name: "success",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_owner",
        type: "address",
      },
      {
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    payable: true,
    stateMutability: "payable",
    type: "fallback",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Pause",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Unpause",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "previousOwner",
        type: "address",
      },
    ],
    name: "OwnershipRenounced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
];

const _bytecode =
  "0x6003805460a860020a60ff021960a060020a60ff02199091167401000000000000000000000000000000000000000017169055600060045560c0604052600960808190527f41424320546f6b656e000000000000000000000000000000000000000000000060a09081526100769160059190610106565b506040805180820190915260038082527f414243000000000000000000000000000000000000000000000000000000000060209092019182526100bb91600691610106565b506007805460ff191660121790553480156100d557600080fd5b5060038054600160a060020a03191633600160a060020a031617905560075460ff16600a0a612710026001556101a1565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061014757805160ff1916838001178555610174565b82800160010185558215610174579182015b82811115610174578251825591602001919060010190610159565b50610180929150610184565b5090565b61019e91905b80821115610180576000815560010161018a565b90565b610de9806101b06000396000f3006080604052600436106101065763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166305d2035b811461010b57806306fdde0314610134578063095ea7b3146101be57806318160ddd146101e257806323b872dd14610209578063313ce567146102335780633f4ba83a1461025e57806340c10f19146102755780635c975abb1461029957806366188463146102ae57806370a08231146102d25780638456cb59146102f35780638da5cb5b1461030857806395d89b4114610339578063a9059cbb1461034e578063bca63e5014610372578063d73dd62314610387578063dd62ed3e146103ab578063f2fde38b146103d2575b600080fd5b34801561011757600080fd5b506101206103f3565b604080519115158252519081900360200190f35b34801561014057600080fd5b50610149610415565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561018357818101518382015260200161016b565b50505050905090810190601f1680156101b05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101ca57600080fd5b50610120600160a060020a03600435166024356104a3565b3480156101ee57600080fd5b506101f76104ce565b60408051918252519081900360200190f35b34801561021557600080fd5b50610120600160a060020a03600435811690602435166044356104d4565b34801561023f57600080fd5b50610248610501565b6040805160ff9092168252519081900360200190f35b34801561026a57600080fd5b5061027361050a565b005b34801561028157600080fd5b50610120600160a060020a0360043516602435610586565b3480156102a557600080fd5b506101206106ce565b3480156102ba57600080fd5b50610120600160a060020a03600435166024356106de565b3480156102de57600080fd5b506101f7600160a060020a0360043516610702565b3480156102ff57600080fd5b5061027361071d565b34801561031457600080fd5b5061031d61079e565b60408051600160a060020a039092168252519081900360200190f35b34801561034557600080fd5b506101496107ad565b34801561035a57600080fd5b50610120600160a060020a0360043516602435610808565b34801561037e57600080fd5b506101f761082c565b34801561039357600080fd5b50610120600160a060020a0360043516602435610832565b3480156103b757600080fd5b506101f7600160a060020a0360043581169060243516610856565b3480156103de57600080fd5b50610273600160a060020a0360043516610881565b6003547501000000000000000000000000000000000000000000900460ff1681565b6005805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561049b5780601f106104705761010080835404028352916020019161049b565b820191906000526020600020905b81548152906001019060200180831161047e57829003601f168201915b505050505081565b60035460009060a060020a900460ff16156104bd57600080fd5b6104c7838361091a565b9392505050565b60015490565b60035460009060a060020a900460ff16156104ee57600080fd5b6104f9848484610984565b949350505050565b60075460ff1681565b60035433600160a060020a0390811691161461052557600080fd5b60035460a060020a900460ff16151561053d57600080fd5b6003805474ff0000000000000000000000000000000000000000191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b600354600090819033600160a060020a039081169116146105a657600080fd5b6003547501000000000000000000000000000000000000000000900460ff16156105cf57600080fd5b6004546105e2908463ffffffff610b0416565b6001549091508111156105f457600080fd5b600454610607908463ffffffff610b0416565b600455600160a060020a038416600090815260208190526040902054610633908463ffffffff610b0416565b600160a060020a03851660008181526020818152604091829020939093558051868152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a2604080518481529051600160a060020a038616916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35060019392505050565b60035460a060020a900460ff1681565b60035460009060a060020a900460ff16156106f857600080fd5b6104c78383610b17565b600160a060020a031660009081526020819052604090205490565b60035433600160a060020a0390811691161461073857600080fd5b60035460a060020a900460ff161561074f57600080fd5b6003805474ff0000000000000000000000000000000000000000191660a060020a1790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b600354600160a060020a031681565b6006805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561049b5780601f106104705761010080835404028352916020019161049b565b60035460009060a060020a900460ff161561082257600080fd5b6104c78383610c10565b60045481565b60035460009060a060020a900460ff161561084c57600080fd5b6104c78383610d09565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60035433600160a060020a0390811691161461089c57600080fd5b600160a060020a03811615156108b157600080fd5b600354604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a03338116600081815260026020908152604080832094871680845294825280832086905580518681529051929493927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b6000600160a060020a038316151561099b57600080fd5b600160a060020a0384166000908152602081905260409020548211156109c057600080fd5b600160a060020a03808516600090815260026020908152604080832033909416835292905220548211156109f357600080fd5b600160a060020a038416600090815260208190526040902054610a1c908363ffffffff610dab16565b600160a060020a038086166000908152602081905260408082209390935590851681522054610a51908363ffffffff610b0416565b600160a060020a0380851660009081526020818152604080832094909455878316825260028152838220339093168252919091522054610a97908363ffffffff610dab16565b600160a060020a038086166000818152600260209081526040808320338616845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b81810182811015610b1157fe5b92915050565b600160a060020a03338116600090815260026020908152604080832093861683529290529081205480831115610b7457600160a060020a033381166000908152600260209081526040808320938816835292905290812055610bab565b610b84818463ffffffff610dab16565b600160a060020a033381166000908152600260209081526040808320938916835292905220555b600160a060020a0333811660008181526002602090815260408083209489168084529482529182902054825190815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a35060019392505050565b6000600160a060020a0383161515610c2757600080fd5b600160a060020a033316600090815260208190526040902054821115610c4c57600080fd5b600160a060020a033316600090815260208190526040902054610c75908363ffffffff610dab16565b600160a060020a033381166000908152602081905260408082209390935590851681522054610caa908363ffffffff610b0416565b600160a060020a03808516600081815260208181526040918290209490945580518681529051919333909316927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350600192915050565b600160a060020a033381166000908152600260209081526040808320938616835292905290812054610d41908363ffffffff610b0416565b600160a060020a0333811660008181526002602090815260408083209489168084529482529182902085905581519485529051929391927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a350600192915050565b600082821115610db757fe5b509003905600a165627a7a72305820561003c5a83607f5a815157e607b8c9a30b432ab08d11dea0c9a06ba921c2b1f0029";

export class BEP20Token__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BEP20Token> {
    return super.deploy(overrides || {}) as Promise<BEP20Token>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BEP20Token {
    return super.attach(address) as BEP20Token;
  }
  connect(signer: Signer): BEP20Token__factory {
    return super.connect(signer) as BEP20Token__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BEP20TokenInterface {
    return new utils.Interface(_abi) as BEP20TokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BEP20Token {
    return new Contract(address, _abi, signerOrProvider) as BEP20Token;
  }
}
